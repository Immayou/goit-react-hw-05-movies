{"version":3,"file":"static/js/822.a9bc966b.chunk.js","mappings":"gMAEaA,E,QAASC,EAAAA,IAAH,sG,SCCNC,EAAU,WACnB,OACE,SAACF,EAAD,WACE,SAAC,KAAD,CACCG,MAAM,OACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAIhB,C,iLCVUC,GAAgBN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,qGAObQ,GAAgBR,EAAAA,EAAAA,GAAOS,EAAAA,IAAPT,CAAH,4CAIbU,EAAgBV,EAAAA,EAAAA,GAAH,+U,SCZbW,EAAiB,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UAC5B,OACI,wBACCA,EAAUC,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,KAAb,EAAmBC,YAAnB,OACf,SAACP,EAAD,WACI,UAACJ,EAAD,CAAeY,GAAE,iBAAYJ,GAA7B,WAAmC,SAACN,EAAD,IAAkBO,GAAgBC,MADrDF,EADL,KAMtB,E,UCVYK,EAAQnB,EAAAA,EAAAA,GAAH,gGCwClB,EApCa,WACb,OAA4BoB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBK,OAhBLC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,sGAErBF,GAAa,GAFQ,UAGIG,EAAAA,EAAAA,MAHJ,cAGfC,EAHe,gBAIOA,EAAWf,KAAI,YAAwB,MAAO,CAACE,MAAT,EAArBA,MAAqCC,KAAhB,EAAdA,KAAoCF,GAAtB,EAARA,GAAkC,IAJvE,OAIfe,EAJe,OAKrBP,EAAUO,GACVL,GAAa,GANQ,kDAQrBM,QAAQC,IAAI,KAAMC,SARG,0DAAH,qDAWtBN,GAEC,GAAE,KAGC,+BACA,4BACCH,IAAa,SAAC,IAAD,IACK,IAAlBF,EAAOY,SACN,gCACA,SAACd,EAAD,8BACA,SAACR,EAAD,CAAgBC,UAAWS,WAOlC,C,mMCtCDa,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMP,EAA4B,mCAAG,oGAEjBO,EAAAA,GAAAA,IAAA,mCAAsCC,qCAFrB,cAElCC,EAFkC,gBAG3BA,EAASC,KAAKC,QAHa,mFAAH,qDAM5BC,EAAmB,mCAAG,WAAOzB,GAAP,uFACRoB,EAAAA,GAAAA,IAAA,gBAAmBpB,EAAnB,oBAAiCqB,mCAAjC,oBADQ,cACzBC,EADyB,gBAElBA,EAASC,KAFS,mFAAH,sDAKnBG,EAAkB,mCAAG,WAAO1B,GAAP,uFACPoB,EAAAA,GAAAA,IAAA,gBAAmBpB,EAAnB,4BAAyCqB,mCAAzC,oBADO,cACxBC,EADwB,gBAEjBA,EAASC,KAAKI,KAFG,mFAAH,sDAKlBC,EAAoB,mCAAG,WAAO5B,GAAP,uFACToB,EAAAA,GAAAA,IAAA,gBAAmBpB,EAAnB,4BAAyCqB,mCAAzC,2BADS,cAC1BC,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,sDAKpBK,EAAyB,mCAAG,WAAOC,GAAP,uFACdV,EAAAA,GAAAA,IAAA,+BAAkCC,mCAAlC,wCAA+FS,IADjF,cAC/BR,EAD+B,yBAE9BA,EAASC,KAAKC,SAFgB,2CAAH,qD","sources":["components/Spiner/Spiner.styled.js","components/Spiner/Spiner.jsx","components/TrendingMovies/TrendingMovies.styled.js","components/TrendingMovies/TrendingMovies.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Loader = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%)\n`","import { FallingLines } from 'react-loader-spinner'\nimport { Loader } from \"../Spiner/Spiner.styled\";\n\nexport const Spinner = () => {\n    return (\n      <Loader>\n        <FallingLines\n         color='#000'\n         width=\"200\"\n         visible={true}\n         ariaLabel='falling-lines-loading'\n        />\n      </Loader>\n    );\n  };\n\n","import styled from \"@emotion/styled\";\nimport {MdDoneAll} from 'react-icons/md';\nimport { Link } from \"react-router-dom\";\n\nexport const MovieListLink = styled(Link)`\ntext-decoration: none;\nfont-size: 20px;\nfont-style: italic;\ncolor: #000;\n`\n\nexport const MdDoneAllIcon = styled(MdDoneAll)`\nmargin-right: 6px;\n`\n\nexport const MovieListItem = styled.li`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\n&:not(:last-child) {\n    margin-bottom: 8px;\n}\ntransition: text-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1), transform 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover {\ntext-shadow: 1px 1px 1px gray;\ntransform: scaleY(1.1);\n}\n`\n","import PropTypes from 'prop-types';\nimport { MovieListLink, MovieListItem, MdDoneAllIcon } from \"./TrendingMovies.styled\"\n\nexport const TrendingMovies = ({getMovies}) => {\n    return (\n        <ul>\n        {getMovies.map(({id, title, name, poster_path}) => (\n        <MovieListItem key={id}>\n            <MovieListLink to={`movies/${id}`}><MdDoneAllIcon />{title ? title : name}</MovieListLink>\n            </MovieListItem>))}\n        </ul>\n    )\n}\n\nTrendingMovies.propTypes = {\n    getMovies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            name: PropTypes.string,\n          }).isRequired,\n    ).isRequired\n    }","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\nfont-size: 36px;\nmargin-bottom: 20px;\ntext-shadow: 1px 1px 1px gray;\n`","import { useState, useEffect } from \"react\"\nimport { makeTrendingMoviesApiRequest } from \"../../services/api\"\nimport { TrendingMovies} from '../../components/TrendingMovies/TrendingMovies'\nimport { Spinner } from \"../../components/Spiner/Spiner\"\nimport { Title } from \"./Home.styled\"\n\nconst Home = () => {\nconst [movies, setMovies] = useState([])\nconst [isLoading, setIsLoading] = useState(false)\n\nuseEffect(() => {\n  const onRequestHandler = async () => {\n    try {\n      setIsLoading(true)\n      const dataMovies = await makeTrendingMoviesApiRequest()\n      const getmoviesInfo = await dataMovies.map(({title, name, id}) => {return {title, name, id}})\n      setMovies(getmoviesInfo)\n      setIsLoading(false)\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n  onRequestHandler()\n\n  }, []) \n  \n     return (\n      <>\n      <main>\n      {isLoading && <Spinner />}\n      {movies.length !== 0 &&\n      ( <section>\n        <Title>Trending today</Title>\n        <TrendingMovies getMovies={movies}/>\n          </section>\n        )}\n        </main>\n        </>\n        \n    )\n}\n\nexport default Home\n\n","import axios from \"axios\"\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport const makeTrendingMoviesApiRequest = async () => {\n   \n    const response = await axios.get(`trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`)\n    return await response.data.results\n}\n\nexport const makeMovieApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data\n}\n\nexport const makeCastApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data.cast\n}\n\nexport const makeReviewApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)  \n    return response.data.results\n}\n\nexport const makeMovieSearchApiReguest = async (value) => {\n    const response = await axios.get(`search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`)  \n    return response.data.results\n}\n"],"names":["Loader","styled","Spinner","color","width","visible","ariaLabel","MovieListLink","Link","MdDoneAllIcon","MdDoneAll","MovieListItem","TrendingMovies","getMovies","map","id","title","name","poster_path","to","Title","useState","movies","setMovies","isLoading","setIsLoading","useEffect","onRequestHandler","makeTrendingMoviesApiRequest","dataMovies","getmoviesInfo","console","log","message","length","axios","process","response","data","results","makeMovieApiReguest","makeCastApiReguest","cast","makeReviewApiReguest","makeMovieSearchApiReguest","value"],"sourceRoot":""}