{"version":3,"file":"static/js/822.0e935a6e.chunk.js","mappings":"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","sources":["components/Spiner/Spiner.styled.js","components/Spiner/Spiner.jsx","components/TrendingMovies/TrendingMovies.styled.js","components/TrendingMovies/TrendingMovies.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Loader = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%)\n`","import { FallingLines } from 'react-loader-spinner'\nimport { Loader } from \"../Spiner/Spiner.styled\";\n\nexport const Spinner = () => {\n    return (\n      <Loader>\n        <FallingLines\n         color='#000'\n         width=\"200\"\n         visible={true}\n         ariaLabel='falling-lines-loading'\n        />\n      </Loader>\n    );\n  };\n\n","import styled from \"@emotion/styled\";\nimport {BiStar} from 'react-icons/bi';\nimport { Link } from \"react-router-dom\";\n\nexport const MovieListLink = styled(Link)`\ntext-decoration: none;\nfont-size: 20px;\nfont-style: italic;\ncolor: #000;\nborder-radius: 5px;\n`\n\nexport const BiStarIcon = styled(BiStar)`\n&:not(:last-of-type) {\nmargin-right: 8px;\n}\n`\nexport const MovieTopBox = styled.div`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nbottom: 0;\nwidth: 100%;\nmin-height: 30%;\nmargin: 0;\nfont-size: 18px;\nline-height: 1.56;\nbackground-color: rgba(0,0, 0, 2); \nopacity: 0.8;\ncolor: #FFFFFF;\noverflow: auto;\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`\n\nexport const MovieListItem = styled.li`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nborder-radius: 5px;\n&:not(:last-child) {\n    margin-bottom: 8px;\n}\ntransition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover {\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,3);\n}\n`\nexport const TrendingMoviesList = styled.ul`\ndisplay:grid;\ngrid-template-columns: repeat(1, 1fr);\n/* grid-template-rows: repeat(3, 1fr); */\ngrid-column-gap: 10px;\ngrid-row-gap: 10px;\n@media screen and (min-width: 450px) {\ngrid-template-columns: repeat(2, 1fr);\ngrid-template-rows: repeat(2, 1fr);\n}\n@media screen and (min-width: 768px) {\ngrid-template-columns: repeat(4, 1fr);\ngrid-template-rows: repeat(3, 1fr);\n}\n@media screen and (min-width: 1200px) {\ngrid-template-columns: repeat(5, 1fr);\ngrid-template-rows: repeat(3, 1fr);\n}\n`\n\nexport const MovieBox = styled.div`\nposition: relative;\nborder-radius: 5px;\noverflow: hidden;\n`\n\nexport const MovieImage = styled.img`\nheight: 400px;\nborder-radius: 5px;\n`\nexport const MovieTitle = styled.h3`\nfont-size: 20px;\n`\n\nexport const VoteValue = styled.span`\nmargin-right: 8px;\n`\n\nexport const AditionalInfoBox = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`","import PropTypes from 'prop-types';\nimport { MovieListLink, MovieListItem, BiStarIcon, TrendingMoviesList, MovieTopBox, MovieBox, MovieImage, MovieTitle, VoteValue, AditionalInfoBox } from \"./TrendingMovies.styled\"\n\nexport const TrendingMovies = ({getMovies}) => {\n    return (\n        <TrendingMoviesList>\n        {getMovies.map(({id, title, name, poster_path, vote_average}) => (\n        <MovieListItem key={id}>\n            <MovieListLink to={`movies/${id}`}>\n                <MovieBox>\n                <MovieImage src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : require('../../img/no-img-avaliable.jpg')} alt={`${title ? title : name}`} />\n                <MovieTopBox>\n                <MovieTitle>{title ? title : name}</MovieTitle>\n                <AditionalInfoBox>\n                <BiStarIcon />\n                <VoteValue>{vote_average ? Number(vote_average).toFixed(1) : 'No information'}</VoteValue><BiStarIcon />\n                </AditionalInfoBox>\n                </MovieTopBox>\n                </MovieBox>\n            </MovieListLink>\n            </MovieListItem>))}\n        </TrendingMoviesList>\n    )\n}\n\nTrendingMovies.propTypes = {\n    getMovies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            name: PropTypes.string,\n            poster_path: PropTypes.string,\n            vote_average: PropTypes.number,\n          }).isRequired,\n    ).isRequired\n    }","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\nfont-size: 36px;\nmargin-bottom: 20px;\ntext-shadow: 1px 1px 1px gray;\n`","import { useState, useEffect } from \"react\"\nimport { makeTrendingMoviesApiRequest } from \"../../services/api\"\nimport { TrendingMovies} from '../../components/TrendingMovies/TrendingMovies'\nimport { Spinner } from \"../../components/Spiner/Spiner\"\nimport { Title } from \"./Home.styled\"\n\nconst Home = () => {\nconst [movies, setMovies] = useState([])\nconst [isLoading, setIsLoading] = useState(false)\n\nuseEffect(() => {\n  const onRequestHandler = async () => {\n    try {\n      setIsLoading(true)\n      const dataMovies = await makeTrendingMoviesApiRequest()\n      const getmoviesInfo = await dataMovies.map(({title, name, id, poster_path, vote_average}) => {return {title, name, id, poster_path, vote_average}})\n      setMovies(getmoviesInfo)\n      setIsLoading(false)\n    } catch (error) {\n      console.log(error.message)\n    }\n  }\n  onRequestHandler()\n\n  }, []) \n     return (\n      <>\n      <main>\n      {isLoading && <Spinner />}\n      {movies.length !== 0 &&\n      ( <section>\n        <Title>Trending today</Title>\n        <TrendingMovies getMovies={movies}/>\n          </section>\n        )}\n        </main>\n        </>\n    )\n}\n\nexport default Home\n\n","import axios from \"axios\"\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport const makeTrendingMoviesApiRequest = async () => {\n    const response = await axios.get(`trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`)\n    return await response.data.results\n}\n\nexport const makeMovieApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data\n}\n\nexport const makeCastApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data.cast\n}\n\nexport const makeReviewApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)  \n    return response.data.results\n}\n\nexport const makeMovieSearchApiReguest = async (value) => {\n    const response = await axios.get(`search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`)  \n    return response.data.results\n}\n"],"names":["Loader","styled","Spinner","color","width","visible","ariaLabel","MovieListLink","Link","BiStarIcon","BiStar","MovieTopBox","MovieListItem","TrendingMoviesList","MovieBox","MovieImage","MovieTitle","VoteValue","AditionalInfoBox","TrendingMovies","getMovies","map","id","title","name","poster_path","vote_average","to","src","require","alt","Number","toFixed","Title","useState","movies","setMovies","isLoading","setIsLoading","useEffect","onRequestHandler","makeTrendingMoviesApiRequest","dataMovies","getmoviesInfo","console","log","message","length","axios","process","response","data","results","makeMovieApiReguest","makeCastApiReguest","cast","makeReviewApiReguest","makeMovieSearchApiReguest","value"],"sourceRoot":""}