{"version":3,"file":"static/js/19.8e56eab7.chunk.js","mappings":"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","sources":["components/Spiner/Spiner.styled.js","components/Spiner/Spiner.jsx","pages/Movies/Movies.styled.js","pages/Movies/ListOfMovies.jsx","components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Loader = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%)\n`","import { FallingLines } from 'react-loader-spinner'\nimport { Loader } from \"../Spiner/Spiner.styled\";\n\nexport const Spinner = () => {\n    return (\n      <Loader>\n        <FallingLines\n         color='#000'\n         width=\"200\"\n         visible={true}\n         ariaLabel='falling-lines-loading'\n        />\n      </Loader>\n    );\n  };\n\n","import styled from \"@emotion/styled\";\n\nexport const MoviesList = styled.ul`\ndisplay:grid;\ngrid-template-columns: repeat(1, 1fr);\n/* grid-template-rows: repeat(3, 1fr); */\ngrid-column-gap: 10px;\ngrid-row-gap: 10px;\n@media screen and (min-width: 450px) {\ngrid-template-columns: repeat(2, 1fr);\ngrid-template-rows: repeat(2, 1fr);\n}\n@media screen and (min-width: 768px) {\ngrid-template-columns: repeat(4, 1fr);\ngrid-template-rows: repeat(3, 1fr);\n}\n`\nexport const PosterPicture = styled.img`\nheight: 400px;\nborder-radius: 5px;\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n`\n\nexport const MovieTitle = styled.h2`\nfont-size: 17px;\nfont-style: oblique;\n`\nexport const EmptySubmitAlarmMessage = styled.p`\nfont-size: 20px;\nfont-style: italic;\nopacity: 0.6;\n`","import { Link } from \"react-router-dom\"\nimport PropTypes from 'prop-types'\nimport { MoviesList, MovieTitle, PosterPicture, EmptySubmitAlarmMessage } from \"./Movies.styled\"\n\nexport const ListOfMovies = ({allMovies, location, isSubmited, searchQuery}) => {\n    return (\n        <>\n    {allMovies.length > 0 &&\n    (<MoviesList>\n    {allMovies.map(({id, title, vote_average, poster_path}) => (\n    <li key={id}>\n        <Link to={`${id}`} state={{from: location}}>\n        <PosterPicture src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : require('../../img/no-img-avaliable.jpg')} alt={`${title}`} />\n        </Link>\n        <MovieTitle>{title}</MovieTitle>\n        <p>User score: {Number(vote_average) !== 0 ? (Number(vote_average)*10).toFixed(0) + '%' : 'No information'}</p>\n    </li>))}\n    </MoviesList>)}\n    {isSubmited && searchQuery !== '' && (<EmptySubmitAlarmMessage>The query you requested could not be found!</EmptySubmitAlarmMessage>)}\n    {isSubmited && searchQuery === '' && (<EmptySubmitAlarmMessage>Enter your query, please!</EmptySubmitAlarmMessage>)}\n    </>\n    )\n}\n\nListOfMovies.propTypes = {\n    allMovies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number,\n            title: PropTypes.string,\n            poster_path: PropTypes.string,\n            vote_average: PropTypes.number,\n          }).isRequired,\n    ).isRequired,\n    location: PropTypes.object.isRequired,\n    isSubmitting: PropTypes.bool.isRequired,\n    searchQuery: PropTypes.string.isRequired,\n    }","import styled from \"@emotion/styled\"\n\nexport const SearchForm = styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 20px;\nmax-width: 500px;\nbackground-color: rgba(223, 173, 173, 0.711);\nborder-radius: 5px;\nborder: 1px outset rgba(143, 7, 7, 0.9);\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n`\n\nexport const SearchFormButton = styled.button`\ndisplay: inline-block;\nwidth: 50px;\nheight: 50px;\nopacity: 0.6;\nflex-shrink:0;\nborder-top-right-radius: 5px;\nborder-bottom-right-radius: 5px;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\nopacity: 1;\n}\n`\nexport const SearchFormInput = styled.input`\ndisplay: inline-block;\nwidth: 100%;\nheight: 100%;\nfont: inherit;\nfont-size: 20px;\nbackground-color: transparent;\nborder: none;\noutline: none;\npadding: 0 4px;\n&::placeholder {\nfont: inherit;\nfont-size: 18px;\n}\n`\n\nexport const EmptySubmitAlarmMessage = styled.p`\nfont-size: 20px;\nfont-style: italic;\nopacity: 0.6;\n`","import { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { FiLoader } from \"react-icons/fi\";\nimport { SearchForm, SearchFormButton, SearchFormInput } from \"./SearchBox.styled\"\n\nexport const SearchBox = ({onChange}) => {\nconst [inputQuery, setInputQuery] = useState('');\n\nconst inputHandler = e => {\nsetInputQuery (e.currentTarget.value.toLowerCase())\n}\n    \nconst formSubmitHandler = e => {\ne.preventDefault();\nonChange(inputQuery);\n}\n\nreturn (\n    <SearchForm onSubmit={formSubmitHandler}>\n      <SearchFormInput\n    type=\"text\"\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movies by title\"\n    onChange={inputHandler}\n    />\n      <SearchFormButton type=\"submit\"><FiLoader size='20px'/>\n      </SearchFormButton>\n</SearchForm>\n    )\n}\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func.isRequired\n}","import { useState, useEffect } from \"react\"\nimport { useSearchParams, useLocation } from \"react-router-dom\"\nimport { makeMovieSearchApiReguest } from \"../../services/api\"\nimport { ListOfMovies } from \"./ListOfMovies\";\nimport { SearchBox } from \"../../components/SearchBox/SearchBox\";\nimport { Spinner } from \"../../components/Spiner/Spiner\"\n    \nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [isSubmited, setIsSubmited] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n    const [searchParams, setSearchParams] = useSearchParams()\n    const query = searchParams.get('query') ?? ''\n    const location = useLocation()\n\n    useEffect(() => {\n        if (query === \"\") {\n            setMovies([])\n            return\n        }\n    \n        const onRequestHandler = async () => {\n            try {\n            setIsLoading(true)\n            const getMoviesByQuery = await makeMovieSearchApiReguest(query).then(res => res)\n            const getMoviesInfo = await getMoviesByQuery.map(({id, title, vote_average, poster_path}) => {return {title, id, vote_average, poster_path}})\n            setMovies(getMoviesInfo)\n            setIsLoading(false)\n        } catch (error) {\n            console.log(error.message)\n            }\n        }\n            onRequestHandler()\n        }, [query])\n\n    const queryHandler = (value) => {\n     setIsSubmited(true)\n     setSearchParams(value.trim() !== '' ? {query: value} : {})\n    }\n\n        return (\n          <>\n          <main>\n             <section>\n            <SearchBox onChange={queryHandler} disabled={isLoading}/>\n         {isLoading ? <Spinner /> : <ListOfMovies allMovies={movies} location={location} isSubmited={isSubmited} searchQuery={query}/>}\n            </section>\n          </main>\n          </>\n        )\n    }\n\nexport default Movies;\n\n","import axios from \"axios\"\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport const makeMovieApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data\n}\n\nexport const makeCastApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data.cast\n}\n\nexport const makeReviewApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)  \n    return response.data.results\n}\n\nexport const makeMovieSearchApiReguest = async (value) => {\n    const response = await axios.get(`search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`)  \n    return response.data.results\n}\n"],"names":["Loader","styled","Spinner","color","width","visible","ariaLabel","MoviesList","PosterPicture","MovieTitle","EmptySubmitAlarmMessage","ListOfMovies","allMovies","location","isSubmited","searchQuery","length","map","id","title","vote_average","poster_path","to","state","from","src","require","alt","Number","toFixed","SearchForm","SearchFormButton","SearchFormInput","SearchBox","onChange","useState","inputQuery","setInputQuery","onSubmit","e","preventDefault","type","autoComplete","autoFocus","placeholder","currentTarget","value","toLowerCase","size","movies","setMovies","setIsSubmited","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","useLocation","useEffect","onRequestHandler","makeMovieSearchApiReguest","then","res","getMoviesByQuery","getMoviesInfo","console","log","message","trim","disabled","axios","makeMovieApiReguest","process","response","data","makeCastApiReguest","cast","makeReviewApiReguest","results"],"sourceRoot":""}