{"version":3,"file":"static/js/67.1ec5059c.chunk.js","mappings":"8RAEaA,EAAYC,EAAAA,EAAAA,GAAH,uEAMTC,EAAYD,EAAAA,EAAAA,GAAH,8CAITE,EAAiBF,EAAAA,EAAAA,IAAH,sE,SCRdG,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC5B,OACE,8BACsB,IAAnBA,EAAQC,QACP,SAACH,EAAD,CAAgBI,IAAKC,EAAcC,IAAI,uBAEvC,wBACGJ,EAAQK,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACb,EAAD,YACE,UAACE,EAAD,sBAAoBS,MACpB,uBAAIC,MAFUC,EADL,OAUtB,E,UCWD,EA1BgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,oGAErBF,GAAa,GAFQ,UAGSG,EAAAA,EAAAA,IAAqBT,GAASU,MAC1D,SAAAC,GAAG,OAAIA,CAAJ,IAJgB,OAGfC,EAHe,OAMrBR,EAAgBQ,GAChBN,GAAa,GAPQ,gDASrBO,QAAQC,IAAI,KAAMC,SATG,yDAAH,qDAYtBP,GACD,GAAE,CAACR,KAGF,8BAAGK,GAAY,SAAC,IAAD,KAAc,SAACf,EAAD,CAAaC,QAASY,KAEtD,C,gFC5BYa,E,QAAS7B,EAAAA,IAAH,sG,SCCN8B,EAAU,WACrB,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,MAAM,OACNC,MAAM,MACNC,SAAS,EACTC,UAAU,2BAIjB,C,mMCZDC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAA4B,mCAAG,WAAMC,GAAN,uFACnBF,EAAAA,GAAAA,IAAA,mCACOG,oCAC5B,CAAED,OAAQA,IAH8B,cACpCE,EADoC,gBAK7BA,EAASC,KAAKC,QALe,mFAAH,sDAQ5BC,EAAmB,mCAAG,WAAM9B,GAAN,uFACVuB,EAAAA,GAAAA,IAAA,gBACZvB,EADY,oBACE0B,mCADF,oBADU,cAC3BC,EAD2B,gBAIpBA,EAASC,KAJW,mFAAH,sDAOnBG,EAAkB,mCAAG,WAAM/B,GAAN,uFACTuB,EAAAA,GAAAA,IAAA,gBACZvB,EADY,4BACU0B,mCADV,oBADS,cAC1BC,EAD0B,gBAInBA,EAASC,KAAKI,KAJK,mFAAH,sDAOlBtB,EAAoB,mCAAG,WAAMV,GAAN,uFACXuB,EAAAA,GAAAA,IAAA,gBACZvB,EADY,4BACU0B,mCADV,2BADW,cAC5BC,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAOpBI,EAAyB,mCAAG,WAAMC,GAAN,uFAChBX,EAAAA,GAAAA,IAAA,+BACGG,mCADH,wCACgEQ,IAFhD,cACjCP,EADiC,yBAIhCA,EAASC,KAAKC,SAJkB,2CAAH,qD","sources":["components/ReviewsList/ReviewsList.styled.js","components/ReviewsList/ReviewsList.jsx","components/Reviews/Reviews.jsx","components/Spiner/Spiner.styled.js","components/Spiner/Spiner.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const MovieItem = styled.li`\n&:not(:last-child) {\nmargin-bottom: 20px;\n}\n`\n\nexport const ItemTitle = styled.h3`\nmargin-bottom: 10px;\n`\n\nexport const NoResultsImage = styled.img`\nmargin: 0 auto;\nwidth: 35%;\nheight: 300px;\n`\n","import PropTypes from 'prop-types';\nimport noResultsUrl from '../../img/sorry-no-results.png';\nimport { ItemTitle, NoResultsImage, MovieItem } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <>\n      {reviews.length === 0 ? (\n        <NoResultsImage src={noResultsUrl} alt=\"Sorry, no results\" />\n      ) : (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <MovieItem key={id}>\n              <ItemTitle>Author: {author}</ItemTitle>\n              <p>{content}</p>\n            </MovieItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      content: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { makeReviewApiReguest } from '../../services/api';\nimport { ReviewsList } from '../ReviewsList/ReviewsList';\nimport { Spinner } from '../../components/Spiner/Spiner';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const onRequestHandler = async () => {\n      try {\n        setIsLoading(true);\n        const getMovieReviews = await makeReviewApiReguest(movieId).then(\n          res => res\n        );\n        setMovieReviews(getMovieReviews);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    onRequestHandler();\n  }, [movieId]);\n\n  return (\n    <>{isLoading ? <Spinner /> : <ReviewsList reviews={movieReviews} />}</>\n  );\n};\n\nexport default Reviews;\n","import styled from \"@emotion/styled\"\n\nexport const Loader = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%)\n`","import { FallingLines } from 'react-loader-spinner';\nimport { Loader } from '../Spiner/Spiner.styled';\n\nexport const Spinner = () => {\n  return (\n    <Loader>\n      <FallingLines\n        color=\"#000\"\n        width=\"200\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </Loader>\n  );\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const makeTrendingMoviesApiRequest = async signal => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`,\n    { signal: signal }\n  );\n  return await response.data.results;\n};\n\nexport const makeMovieApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const makeCastApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n  );\n  return await response.data.cast;\n};\n\nexport const makeReviewApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const makeMovieSearchApiReguest = async value => {\n  const response = await axios.get(\n    `search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`\n  );\n  return response.data.results;\n};\n"],"names":["MovieItem","styled","ItemTitle","NoResultsImage","ReviewsList","reviews","length","src","noResultsUrl","alt","map","author","content","id","movieId","useParams","useState","movieReviews","setMovieReviews","isLoading","setIsLoading","useEffect","onRequestHandler","makeReviewApiReguest","then","res","getMovieReviews","console","log","message","Loader","Spinner","color","width","visible","ariaLabel","axios","makeTrendingMoviesApiRequest","signal","process","response","data","results","makeMovieApiReguest","makeCastApiReguest","cast","makeMovieSearchApiReguest","value"],"sourceRoot":""}