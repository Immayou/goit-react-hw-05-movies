{"version":3,"file":"static/js/33.fb90fe02.chunk.js","mappings":"4TAGaA,EAAaC,EAAAA,EAAAA,OAAH,8eAmBVC,GAAaD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,qIAQVG,EAAaH,EAAAA,EAAAA,IAAH,qCAIVI,EAAYJ,EAAAA,EAAAA,IAAH,6VAiBTK,EAAcL,EAAAA,EAAAA,IAAH,6OAWXM,EAAaN,EAAAA,EAAAA,GAAH,gGAMVO,EAAYP,EAAAA,EAAAA,EAAH,0FAMTQ,EAAYR,EAAAA,EAAAA,GAAH,gEAKTS,EAAUT,EAAAA,EAAAA,IAAH,6CAIPU,EAAeV,EAAAA,EAAAA,IAAH,6CAIZW,EAAWX,EAAAA,EAAAA,GAAH,8FAMRY,EAAWZ,EAAAA,EAAAA,GAAH,mvBAuBRa,GAAWb,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,8D,SC9CrB,EAhEqB,WAAO,IAAD,YACpBc,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAef,OAbFC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,8GAEMC,EAAAA,EAAAA,IAAoBX,GAASY,MAAK,SAAAC,GAAG,OAAIA,CAAJ,IAF3C,OAEfC,EAFe,OAGrBV,EAAaU,GAHQ,gDAKrBC,QAAQC,IAAI,KAAMC,SAClBX,EAAS,EAAD,IANa,yDAAH,qDAStBI,GACC,GAAE,CAACV,KAGF,+BACA,2BACE,gCACA,SAACf,EAAD,CAAYiC,KAAK,SAAjB,UAA0B,UAAC/B,EAAD,CAAYgC,GAAE,oBAAEZ,EAASa,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAAxC,WAA6C,SAAC,MAAD,IAA7C,eACzBlB,IAEC,UAACd,EAAD,YACA,UAACC,EAAD,YACE,SAACC,EAAD,CAAa+B,IAAKnB,EAAUoB,YAAV,yCAA0DpB,EAAUoB,aAAgBC,EAAQ,MAAmCC,IAAG,UAAKtB,EAAUuB,MAAQvB,EAAUuB,MAAQvB,EAAUwB,SACzM,4BACA,UAAChC,EAAD,YACE,UAACH,EAAD,WAAaW,EAAUuB,MAAQvB,EAAUuB,MAAQvB,EAAUwB,KAA3D,KAAiE,gCAAQxB,EAAUyB,aAAaC,MAAM,EAAG,GAAxC,WACjE,SAACnC,EAAD,2BACA,UAACD,EAAD,eAAgD,IAAnCqC,OAAO3B,EAAU4B,eAAsD,GAA/BD,OAAO3B,EAAU4B,eAAkBC,QAAQ,GAAK,IAAM,qBAC3G,SAACtC,EAAD,uBACA,SAACD,EAAD,UAAwC,IAA5BU,EAAU8B,OAAOC,OAAe/B,EAAU8B,OAAOE,KAAI,qBAAER,IAAF,IAAkBS,KAAK,MAAQ,uBAElG,UAACxC,EAAD,YACE,SAACF,EAAD,qCACA,UAACG,EAAD,YACE,SAACC,EAAD,WAAU,SAACC,EAAD,CAAUoB,GAAG,OAAOC,MAAO,CAACC,KAAI,oBAAEd,EAASa,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAA1D,qBACV,SAACvB,EAAD,WAAU,SAACC,EAAD,CAAUoB,GAAG,UAAUC,MAAO,CAACC,KAAI,oBAAEd,EAASa,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,KAA7D,oCAKd,SAAC,EAAAgB,SAAD,CAAUC,SAAU,KAApB,UACA,SAAC,KAAD,SAKCjC,IACC,4BACE,mFACA,gBAAKiB,IAAKE,EAAQ,MAAsBC,IAAI,cAAcc,OAAQ,cAO3E,C,mMClEHC,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAA4B,mCAAG,oGAEjBD,EAAAA,GAAAA,IAAA,mCAAsCE,qCAFrB,cAElCC,EAFkC,gBAG3BA,EAASC,KAAKC,QAHa,mFAAH,qDAM5BlC,EAAmB,mCAAG,WAAOmC,GAAP,uFACRN,EAAAA,GAAAA,IAAA,gBAAmBM,EAAnB,oBAAiCJ,mCAAjC,oBADQ,cACzBC,EADyB,gBAElBA,EAASC,KAFS,mFAAH,sDAKnBG,EAAkB,mCAAG,WAAOD,GAAP,uFACPN,EAAAA,GAAAA,IAAA,gBAAmBM,EAAnB,4BAAyCJ,mCAAzC,oBADO,cACxBC,EADwB,gBAEjBA,EAASC,KAAKI,KAFG,mFAAH,sDAKlBC,EAAoB,mCAAG,WAAOH,GAAP,uFACTN,EAAAA,GAAAA,IAAA,gBAAmBM,EAAnB,4BAAyCJ,mCAAzC,2BADS,cAC1BC,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,sDAKpBK,EAAyB,mCAAG,WAAOC,GAAP,uFACdX,EAAAA,GAAAA,IAAA,+BAAkCE,mCAAlC,wCAA+FS,IADjF,cAC/BR,EAD+B,yBAE9BA,EAASC,KAAKC,SAFgB,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\"\n\nexport const BackButton = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nmin-width: 110px;\nmin-height: 35px;\nmargin-bottom: 20px;\npadding: 3px;\nfont-size: 18px;\nborder-radius: 5px;\nbackground-image: radial-gradient(red 2%, black 95%);\ntransition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover {\nbackground-color: rgba(19,10,136,0.30);\nborder: 1px solid rgba(0,0,0,0.24);\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n}\n`\nexport const LinkButton = styled(Link)`\ndisplay: inline-flex;\nalign-items: center;\njustify-content: center;\ntext-decoration: none;\ncolor: #000;\n`\n\nexport const WrapperBox = styled.div`\npadding: 0;\n`\n\nexport const Container = styled.div`\ndisplay: grid;\ngrid-template-columns: (1, 1fr); \ngrid-column-gap: 10px;\ngrid-row-gap: 10px;\nmargin-bottom: 10px;\n\n@media screen and (min-width: 768px) {\ngrid-template-columns: 410px 1fr; \ngrid-column-gap: 40px;\nmargin-bottom: 20px;\n}\n@media screen and (min-width: 1200px) {\ngrid-template-columns: 500px 1fr; \n}\n`\n\nexport const PosterImage = styled.img`\nmargin: 0 auto;\nheight: 400px;\nborder-radius: 5px;\nborder: 1px solid gray;\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n@media screen and (min-width: 450px) {\nwidth: 410px;\n}\n`\n\nexport const MovieTitle = styled.h2`\nfont-size: 30px;\nmargin-bottom: 20px;\ntext-shadow: 1px 1px 1px gray;\n`\n\nexport const MovieInfo = styled.p`\nfont-size: 20px;\n&:not(:last-of-type){\nmargin-bottom: 10px;\n}\n`\nexport const InfoTitle = styled.h3`\nfont-size: 22px;\nmargin-bottom: 10px;\n`\n\nexport const MainBox = styled.div`\nmargin-bottom:30px;\n`\n\nexport const AditionalBox = styled.div`\ntext-align: center;\n`\n\nexport const InfoList = styled.ul`\ndisplay: flex;\nalign-items: center;\njustify-content: space-around;\n`\n\nexport const InfoItem = styled.ul`\ndisplay: flex;\nalign-items: center;\njustify-content: space-around;\nmin-width: 110px;\nmin-height: 35px;\npadding: 3px;\nfont-size: 23px;\nborder-radius: 5px;\nbackground-image: radial-gradient(red 2%, black 95%);\ncolor: #000;\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\nopacity: 1;\ntransition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1), opacity 250ms cubic-bezier(0.075, 0.82, 0.165, 1), border 250ms cubic-bezier(0.075, 0.82, 0.165, 1), box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover {\nbackground-color: rgba(19,10,136,0.30);\nopacity: 1;\nborder: 1px solid rgba(0,0,0,0.24);\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n}\n`\n\nexport const InfoLink = styled(Link)`\ntext-decoration: none;\ncolor: #000;\n`\n","import { useState, useEffect, Suspense } from \"react\"\nimport { useParams, Outlet, useLocation } from \"react-router-dom\"\nimport { HiChevronDoubleLeft } from 'react-icons/hi';\nimport { makeMovieApiReguest } from \"../../services/api\"\nimport { WrapperBox, PosterImage, BackButton, LinkButton, MovieTitle, InfoTitle, MovieInfo, Container, MainBox, AditionalBox, InfoList, InfoItem, InfoLink} from \"./MovieDetails.styled\"\n\nconst MovieDetails = () => {\nconst {movieId} = useParams()\nconst [movieInfo, setMovieInfo] = useState(null)\nconst [error, setError] = useState(null)\nconst location = useLocation()\n\nuseEffect(() => {\n  const onRequestHandler = async () => {\n    try {\n      const movieDatails = await makeMovieApiReguest(movieId).then(res => res)\n      setMovieInfo(movieDatails)\n    } catch (error) {\n      console.log(error.message)\n      setError(error)\n    }\n  }\n  onRequestHandler()\n  }, [movieId])\n\n  return (\n    <>\n    <main>\n      <section>\n      <BackButton type='button'><LinkButton to={location.state?.from ?? '/'}><HiChevronDoubleLeft />Go back</LinkButton></BackButton>\n      {movieInfo &&\n        (\n        <WrapperBox>\n        <Container>\n          <PosterImage src={movieInfo.poster_path ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}` : require('../../img/no-img-avaliable.jpg')} alt={`${movieInfo.title ? movieInfo.title : movieInfo.name}`}/>\n        <div>\n        <MainBox>\n          <MovieTitle>{movieInfo.title ? movieInfo.title : movieInfo.name} <span>({movieInfo.release_date.slice(0, 4)})</span></MovieTitle>\n          <InfoTitle>User score:</InfoTitle>\n          <MovieInfo> {Number(movieInfo.vote_average) !== 0 ? (Number(movieInfo.vote_average)*10).toFixed(0) + '%' : 'No information'}</MovieInfo>\n          <InfoTitle>Genres:</InfoTitle>\n          <MovieInfo>{movieInfo.genres.length !== 0 ? movieInfo.genres.map(({name}) => name).join(', ') : 'No information'}</MovieInfo>\n        </MainBox>\n        <AditionalBox>\n          <InfoTitle>Aditional information</InfoTitle> \n          <InfoList>\n            <InfoItem><InfoLink to='cast' state={{from: location.state?.from ?? '/'}}>Cast</InfoLink></InfoItem>\n            <InfoItem><InfoLink to='reviews' state={{from: location.state?.from ?? '/'}}>Reviews</InfoLink></InfoItem>\n          </InfoList>\n        </AditionalBox>\n        </div>\n        </Container>\n        <Suspense fallback={null}>\n        <Outlet />\n        </Suspense>\n        </WrapperBox>\n        )}\n        \n        {error && (\n          <div>\n            <h1>Sorry, the resource you requested could not be found.</h1>\n            <img src={require('../../img/404.png')} alt=\"Bad Request\" height={60}/>\n          </div>\n        )}\n        </section>\n        </main>\n      </>\n    )\n  }\n\nexport default MovieDetails;","import axios from \"axios\"\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport const makeTrendingMoviesApiRequest = async () => {\n   \n    const response = await axios.get(`trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`)\n    return await response.data.results\n}\n\nexport const makeMovieApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data\n}\n\nexport const makeCastApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data.cast\n}\n\nexport const makeReviewApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)  \n    return response.data.results\n}\n\nexport const makeMovieSearchApiReguest = async (value) => {\n    const response = await axios.get(`search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`)  \n    return response.data.results\n}\n"],"names":["BackButton","styled","LinkButton","Link","WrapperBox","Container","PosterImage","MovieTitle","MovieInfo","InfoTitle","MainBox","AditionalBox","InfoList","InfoItem","InfoLink","movieId","useParams","useState","movieInfo","setMovieInfo","error","setError","location","useLocation","useEffect","onRequestHandler","makeMovieApiReguest","then","res","movieDatails","console","log","message","type","to","state","from","src","poster_path","require","alt","title","name","release_date","slice","Number","vote_average","toFixed","genres","length","map","join","Suspense","fallback","height","axios","makeTrendingMoviesApiRequest","process","response","data","results","id","makeCastApiReguest","cast","makeReviewApiReguest","makeMovieSearchApiReguest","value"],"sourceRoot":""}