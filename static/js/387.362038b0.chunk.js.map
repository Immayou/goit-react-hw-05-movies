{"version":3,"file":"static/js/387.362038b0.chunk.js","mappings":"gRAEaA,EAAWC,EAAAA,EAAAA,GAAH,4dAoBRC,EAAmBD,EAAAA,EAAAA,IAAH,oRAahBE,EAAgBF,EAAAA,EAAAA,EAAH,qFAKbG,EAAYH,EAAAA,EAAAA,EAAH,6C,SCHtB,EAhCa,WACT,IAAOI,GAAWC,EAAAA,EAAAA,MAAXD,QACP,GAAkCE,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAEN,IAAMC,EAAgB,mCAAG,8GAEMC,EAAAA,EAAAA,IAAmBP,GAASQ,MAAK,SAAAC,GAAG,OAAIA,CAAJ,IAF1C,OAEfC,EAFe,OAGrBN,EAAaM,GAHQ,gDAKrBC,QAAQC,IAAI,KAAMC,SALG,yDAAH,qDAQtBP,GACC,GAAE,CAACN,KAGN,8BACCG,IACE,SAACR,EAAD,UACAQ,EAAUW,KAAI,gBAAEC,EAAF,EAAEA,UAAWC,EAAb,EAAaA,GAAIC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,KAA/B,OACf,2BACI,SAACrB,EAAD,CAAkBsB,IAAKF,EAAY,yCAAqCA,GAAiBG,EAAQ,KAAmCC,IAAG,UAAKH,MAC5I,SAACpB,EAAD,UAAgBoB,KAChB,UAACnB,EAAD,yBAAuBgB,OAHlBC,EADM,OAStB,C,8LCjCDM,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAA4B,mCAAG,oGAEjBD,EAAAA,GAAAA,IAAA,mCAAsCE,qCAFrB,cAElCC,EAFkC,gBAG3BA,EAASC,KAAKC,QAHa,mFAAH,qDAM5BC,EAAmB,mCAAG,WAAOZ,GAAP,uFACRM,EAAAA,GAAAA,IAAA,gBAAmBN,EAAnB,oBAAiCQ,mCAAjC,oBADQ,cACzBC,EADyB,gBAElBA,EAASC,KAFS,mFAAH,sDAKnBnB,EAAkB,mCAAG,WAAOS,GAAP,uFACPM,EAAAA,GAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCQ,mCAAzC,oBADO,cACxBC,EADwB,gBAEjBA,EAASC,KAAKG,KAFG,mFAAH,sDAKlBC,EAAoB,mCAAG,WAAOd,GAAP,uFACTM,EAAAA,GAAAA,IAAA,gBAAmBN,EAAnB,4BAAyCQ,mCAAzC,2BADS,cAC1BC,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,sDAKpBI,EAAyB,mCAAG,WAAOC,GAAP,uFACdV,EAAAA,GAAAA,IAAA,+BAAkCE,mCAAlC,wCAA+FQ,IADjF,cAC/BP,EAD+B,yBAE9BA,EAASC,KAAKC,SAFgB,2CAAH,qD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const CastList = styled.ul`\ndisplay:grid;\ngrid-column-gap: 10px;\ngrid-row-gap: 10px;\ngrid-template-columns: (1, 1fr); \nmargin-bottom: 10px;\n\n@media screen and (min-width: 450px) {\ngrid-template-columns: repeat(2, 1fr);\n}\n@media screen and (min-width: 768px) {\ngrid-template-columns: repeat(3, 1fr);\n}\n@media screen and (min-width: 850px) {\ngrid-template-columns: repeat(4, 1fr);\n}\n@media screen and (min-width: 1200px) {\ngrid-template-columns: repeat(6, 1fr);\n}\n`\nexport const CharacterPicture = styled.img`\nheight: 300px;\nmargin: 0 auto;\nborder-radius: 5px;\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n/* @media screen and (max-width: 450px) {\nwidth: 200px;\n} */\n@media screen and (max-width: 768px) {\nwidth: 200px;\n}\n`\n\nexport const CharacterName = styled.p`\ntext-align: center;\nfont-size: 17px;\nfont-style: oblique;\n`\nexport const Character = styled.p`\ntext-align: center;\n`\n","import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { makeCastApiReguest } from \"../../services/api\"\nimport { CastList, CharacterPicture, CharacterName, Character } from \"./Cast.styled\"\n\nconst Cast = () => {\n    const {movieId} = useParams()\n    const [movieCast, setMovieCast] = useState([])\n\n    useEffect(() => {\n\n        const onRequestHandler = async () => {\n          try {\n            const getMovieCast = await makeCastApiReguest(movieId).then(res => res)\n            setMovieCast(getMovieCast)\n          } catch (error) {\n            console.log(error.message)\n          }\n        }\n        onRequestHandler()\n        }, [movieId])\n\n    return (\n      <>\n      {movieCast &&\n        (<CastList>\n        {movieCast.map(({character, id, profile_path, name}) => (\n        <li key={id}>\n            <CharacterPicture src={profile_path ? `https://image.tmdb.org/t/p/w500${profile_path}` : require('../../img/no-img-avaliable.jpg')} alt={`${name}`} />\n            <CharacterName>{name}</CharacterName>\n            <Character>Character: {character}</Character>\n            </li>))}\n        </CastList>)}\n      </>\n    )\n}\n\nexport default Cast\n","import axios from \"axios\"\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport const makeTrendingMoviesApiRequest = async () => {\n   \n    const response = await axios.get(`trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`)\n    return await response.data.results\n}\n\nexport const makeMovieApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data\n}\n\nexport const makeCastApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data.cast\n}\n\nexport const makeReviewApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)  \n    return response.data.results\n}\n\nexport const makeMovieSearchApiReguest = async (value) => {\n    const response = await axios.get(`search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`)  \n    return response.data.results\n}\n"],"names":["CastList","styled","CharacterPicture","CharacterName","Character","movieId","useParams","useState","movieCast","setMovieCast","useEffect","onRequestHandler","makeCastApiReguest","then","res","getMovieCast","console","log","message","map","character","id","profile_path","name","src","require","alt","axios","makeTrendingMoviesApiRequest","process","response","data","results","makeMovieApiReguest","cast","makeReviewApiReguest","makeMovieSearchApiReguest","value"],"sourceRoot":""}