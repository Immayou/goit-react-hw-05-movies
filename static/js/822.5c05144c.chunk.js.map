{"version":3,"file":"static/js/822.5c05144c.chunk.js","mappings":"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","sources":["components/Spiner/Spiner.styled.js","components/Spiner/Spiner.jsx","components/TrendingMovies/TrendingMovies.styled.js","components/TrendingMovies/TrendingMovies.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const Loader = styled.div`\nposition: absolute;\ntop: 50%;\nleft: 50%;\ntransform: translate(-50%, -50%)\n`","import { FallingLines } from 'react-loader-spinner';\nimport { Loader } from '../Spiner/Spiner.styled';\n\nexport const Spinner = () => {\n  return (\n    <Loader>\n      <FallingLines\n        color=\"#000\"\n        width=\"200\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n    </Loader>\n  );\n};\n","import styled from \"@emotion/styled\";\nimport {BiStar} from 'react-icons/bi';\nimport { Link } from \"react-router-dom\";\n\nexport const MovieListLink = styled(Link)`\ntext-decoration: none;\nfont-size: 20px;\nfont-style: italic;\ncolor: #000;\nborder-radius: 5px;\n`\n\nexport const BiStarIcon = styled(BiStar)`\n&:not(:last-of-type) {\nmargin-right: 8px;\n}\n`\nexport const MovieTopBox = styled.div`\nposition: absolute;\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ntext-align: center;\nbottom: 0;\nwidth: 100%;\nmin-height: 30%;\nmargin: 0;\nfont-size: 18px;\nline-height: 1.56;\nbackground-color: rgba(0,0, 0, 2); \nopacity: 0.8;\ncolor: #FFFFFF;\noverflow: auto;\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n`\n\nexport const MovieListItem = styled.li`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nborder-radius: 5px;\n&:not(:last-child) {\n    margin-bottom: 8px;\n}\ntransition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover {\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,3);\n}\n`\nexport const TrendingMoviesList = styled.ul`\ndisplay:grid;\ngrid-template-columns: repeat(1, 1fr);\n/* grid-template-rows: repeat(3, 1fr); */\ngrid-column-gap: 10px;\ngrid-row-gap: 10px;\n@media screen and (min-width: 450px) {\ngrid-template-columns: repeat(2, 1fr);\ngrid-template-rows: repeat(2, 1fr);\n}\n@media screen and (min-width: 768px) {\ngrid-template-columns: repeat(4, 1fr);\ngrid-template-rows: repeat(3, 1fr);\n}\n@media screen and (min-width: 1200px) {\ngrid-template-columns: repeat(5, 1fr);\ngrid-template-rows: repeat(3, 1fr);\n}\n`\n\nexport const MovieBox = styled.div`\nposition: relative;\nborder-radius: 5px;\noverflow: hidden;\n`\n\nexport const MovieImage = styled.img`\nheight: 400px;\nborder-radius: 5px;\n`\nexport const MovieTitle = styled.h3`\nfont-size: 20px;\n`\n\nexport const VoteValue = styled.span`\nmargin-right: 8px;\n`\n\nexport const AditionalInfoBox = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n`","import PropTypes from 'prop-types';\nimport notFoundImageUrl from '../../img/no-img-avaliable.jpg';\nimport {\n  MovieListLink,\n  MovieListItem,\n  BiStarIcon,\n  TrendingMoviesList,\n  MovieTopBox,\n  MovieBox,\n  MovieImage,\n  MovieTitle,\n  VoteValue,\n  AditionalInfoBox,\n} from './TrendingMovies.styled';\n\nexport const TrendingMovies = ({ dataMovies }) => {\n  return (\n    <TrendingMoviesList>\n      {dataMovies.map(({ id, title, name, poster_path, vote_average }) => (\n        <MovieListItem key={id}>\n          <MovieListLink to={`movies/${id}`}>\n            <MovieBox>\n              <MovieImage\n                src={\n                  poster_path\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                    : notFoundImageUrl\n                }\n                alt={`${title ? title : name}`}\n              />\n              <MovieTopBox>\n                <MovieTitle>{title ? title : name}</MovieTitle>\n                <AditionalInfoBox>\n                  <BiStarIcon />\n                  <VoteValue>\n                    {vote_average\n                      ? Number(vote_average).toFixed(1)\n                      : 'No information'}\n                  </VoteValue>\n                  <BiStarIcon />\n                </AditionalInfoBox>\n              </MovieTopBox>\n            </MovieBox>\n          </MovieListLink>\n        </MovieListItem>\n      ))}\n    </TrendingMoviesList>\n  );\n};\n\nTrendingMovies.propTypes = {\n  dataMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      title: PropTypes.string,\n      name: PropTypes.string,\n      poster_path: PropTypes.string,\n      vote_average: PropTypes.number,\n    }).isRequired\n  ).isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Title = styled.h1`\nfont-size: 36px;\ntext-shadow: 1px 1px 1px gray;\nmargin-left: 8px;\n`\n\nexport const TopBox = styled.div`\ndisplay: flex;\nalign-items: center;\nmargin-bottom: 20px;\n`","import axios from 'axios';\nimport { ImPower } from 'react-icons/im';\nimport { useState, useEffect } from 'react';\nimport { TrendingMovies } from '../../components/TrendingMovies/TrendingMovies';\nimport { Spinner } from '../../components/Spiner/Spiner';\nimport { makeTrendingMoviesApiRequest } from '../../services/api';\nimport { Title, TopBox } from './Home.styled';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const controller = new AbortController();\n\n    const onRequestHandler = async () => {\n      try {\n        setIsLoading(true);\n        const dataMovies = await makeTrendingMoviesApiRequest(\n          controller.signal\n        );\n        const getmoviesInfo = await dataMovies.map(\n          ({ title, name, id, poster_path, vote_average }) => {\n            return { title, name, id, poster_path, vote_average };\n          }\n        );\n        setMovies(getmoviesInfo);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    onRequestHandler();\n\n    return () => {\n      controller.abort();\n    };\n  }, []);\n\n  return (\n    <>\n      <main>\n        {isLoading && <Spinner />}\n        {movies.length !== 0 && (\n          <section>\n            <TopBox>\n              <ImPower size=\"25px\" />\n              <Title>Trending today</Title>\n            </TopBox>\n            <TrendingMovies dataMovies={movies} />\n          </section>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const makeTrendingMoviesApiRequest = async signal => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`,\n    { signal: signal }\n  );\n  return await response.data.results;\n};\n\nexport const makeMovieApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const makeCastApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n  );\n  return await response.data.cast;\n};\n\nexport const makeReviewApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const makeMovieSearchApiReguest = async value => {\n  const response = await axios.get(\n    `search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`\n  );\n  return response.data.results;\n};\n"],"names":["Loader","styled","Spinner","color","width","visible","ariaLabel","MovieListLink","Link","BiStarIcon","BiStar","MovieTopBox","MovieListItem","TrendingMoviesList","MovieBox","MovieImage","MovieTitle","VoteValue","AditionalInfoBox","TrendingMovies","dataMovies","map","id","title","name","poster_path","vote_average","to","src","notFoundImageUrl","alt","Number","toFixed","Title","TopBox","axios","useState","movies","setMovies","isLoading","setIsLoading","useEffect","controller","AbortController","onRequestHandler","makeTrendingMoviesApiRequest","signal","getmoviesInfo","console","log","message","abort","length","size","process","response","data","results","makeMovieApiReguest","makeCastApiReguest","cast","makeReviewApiReguest","makeMovieSearchApiReguest","value"],"sourceRoot":""}