{"version":3,"file":"static/js/33.342c1da1.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { Link } from \"react-router-dom\"\n\nexport const BackButton = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nmin-width: 110px;\nmin-height: 35px;\nmargin-bottom: 20px;\npadding: 3px;\nfont-size: 18px;\nborder-radius: 5px;\nbackground-image: radial-gradient(red 2%, black 95%);\ntransition: box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover {\nbackground-color: rgba(19,10,136,0.30);\nborder: 1px solid rgba(0,0,0,0.24);\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n}\n`\nexport const LinkButton = styled(Link)`\ndisplay: inline-flex;\nalign-items: center;\njustify-content: center;\ntext-decoration: none;\ncolor: #000;\n`\n\nexport const WrapperBox = styled.div`\npadding: 0;\n`\n\nexport const Container = styled.div`\ndisplay: grid;\ngrid-template-columns: (1, 1fr); \ngrid-column-gap: 10px;\ngrid-row-gap: 10px;\nmargin-bottom: 10px;\n\n@media screen and (min-width: 768px) {\ngrid-template-columns: 410px 1fr; \ngrid-column-gap: 40px;\nmargin-bottom: 20px;\n}\n@media screen and (min-width: 1200px) {\ngrid-template-columns: 500px 1fr; \n}\n`\n\nexport const PosterImage = styled.img`\nmargin: 0 auto;\nheight: 400px;\nborder-radius: 5px;\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.59);\n@media screen and (min-width: 450px) {\nwidth: 410px;\n}\n`\n\nexport const MovieTitle = styled.h2`\nfont-size: 30px;\nmargin-bottom: 20px;\ntext-shadow: 1px 1px 1px gray;\n`\n\nexport const MovieInfo = styled.p`\nfont-size: 20px;\n&:not(:last-of-type){\nmargin-bottom: 10px;\n}\n`\nexport const InfoTitle = styled.h3`\nfont-size: 22px;\nmargin-bottom: 10px;\n`\n\nexport const MainBox = styled.div`\nmargin-bottom:30px;\n`\n\nexport const AditionalBox = styled.div`\ntext-align: center;\n`\n\nexport const InfoList = styled.ul`\ndisplay: flex;\nalign-items: center;\njustify-content: space-around;\n`\n\nexport const InfoItem = styled.ul`\ndisplay: flex;\nalign-items: center;\njustify-content: space-around;\nmin-width: 110px;\nmin-height: 35px;\npadding: 3px;\nfont-size: 23px;\nborder-radius: 5px;\nbackground-image: radial-gradient(red 2%, black 95%);\ncolor: #000;\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\nopacity: 1;\ntransition: background-color 250ms cubic-bezier(0.075, 0.82, 0.165, 1), opacity 250ms cubic-bezier(0.075, 0.82, 0.165, 1), border 250ms cubic-bezier(0.075, 0.82, 0.165, 1), box-shadow 250ms cubic-bezier(0.075, 0.82, 0.165, 1);\n\n&:hover {\nbackground-color: rgba(19,10,136,0.30);\nopacity: 1;\nborder: 1px solid rgba(0,0,0,0.24);\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n}\n`\n\nexport const InfoLink = styled(Link)`\ntext-decoration: none;\ncolor: #000;\n`\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { HiChevronDoubleLeft } from 'react-icons/hi';\nimport { makeMovieApiReguest } from '../../services/api';\nimport notFoundImageUrl from '../../img/no-img-avaliable.jpg';\nimport notFoundDataRequestUrl from '../../img/404.png';\nimport {\n  WrapperBox,\n  PosterImage,\n  BackButton,\n  LinkButton,\n  MovieTitle,\n  InfoTitle,\n  MovieInfo,\n  Container,\n  MainBox,\n  AditionalBox,\n  InfoList,\n  InfoItem,\n  InfoLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    const onRequestHandler = async () => {\n      try {\n        const movieDatails = await makeMovieApiReguest(movieId);\n        setMovieInfo(movieDatails);\n      } catch (error) {\n        console.log(error.message);\n        setError(error);\n      }\n    };\n    onRequestHandler();\n  }, [movieId]);\n\n  return (\n    <>\n      <main>\n        <section>\n          <BackButton type=\"button\">\n            <LinkButton to={location.state?.from ?? '/'}>\n              <HiChevronDoubleLeft />\n              Go back\n            </LinkButton>\n          </BackButton>\n          {movieInfo && (\n            <WrapperBox>\n              <Container>\n                <PosterImage\n                  src={\n                    movieInfo.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movieInfo.poster_path}`\n                      : notFoundImageUrl\n                  }\n                  alt={`${movieInfo.title ? movieInfo.title : movieInfo.name}`}\n                />\n                <div>\n                  <MainBox>\n                    <MovieTitle>\n                      {movieInfo.title ? movieInfo.title : movieInfo.name}{' '}\n                      <span>({movieInfo.release_date.slice(0, 4)})</span>\n                    </MovieTitle>\n                    <InfoTitle>User score:</InfoTitle>\n                    <MovieInfo>\n                      {' '}\n                      {Number(movieInfo.vote_average) !== 0\n                        ? (Number(movieInfo.vote_average) * 10).toFixed(0) + '%'\n                        : 'No information'}\n                    </MovieInfo>\n                    <InfoTitle>Genres:</InfoTitle>\n                    <MovieInfo>\n                      {movieInfo.genres.length !== 0\n                        ? movieInfo.genres.map(({ name }) => name).join(', ')\n                        : 'No information'}\n                    </MovieInfo>\n                  </MainBox>\n                  <AditionalBox>\n                    <InfoTitle>Aditional information</InfoTitle>\n                    <InfoList>\n                      <InfoItem>\n                        <InfoLink\n                          to=\"cast\"\n                          state={{ from: location.state?.from ?? '/' }}\n                        >\n                          Cast\n                        </InfoLink>\n                      </InfoItem>\n                      <InfoItem>\n                        <InfoLink\n                          to=\"reviews\"\n                          state={{ from: location.state?.from ?? '/' }}\n                        >\n                          Reviews\n                        </InfoLink>\n                      </InfoItem>\n                    </InfoList>\n                  </AditionalBox>\n                </div>\n              </Container>\n              <Suspense fallback={null}>\n                <Outlet />\n              </Suspense>\n            </WrapperBox>\n          )}\n\n          {error && (\n            <div>\n              <h1>Sorry, the resource you requested could not be found.</h1>\n              <img src={notFoundDataRequestUrl} alt=\"Bad Request\" height={60} />\n            </div>\n          )}\n        </section>\n      </main>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const makeTrendingMoviesApiRequest = async signal => {\n  const response = await axios.get(\n    `trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`,\n    { signal: signal }\n  );\n  return await response.data.results;\n};\n\nexport const makeMovieApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const makeCastApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\n  );\n  return await response.data.cast;\n};\n\nexport const makeReviewApiReguest = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n\nexport const makeMovieSearchApiReguest = async value => {\n  const response = await axios.get(\n    `search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`\n  );\n  return response.data.results;\n};\n"],"names":["BackButton","styled","LinkButton","Link","WrapperBox","Container","PosterImage","MovieTitle","MovieInfo","InfoTitle","MainBox","AditionalBox","InfoList","InfoItem","InfoLink","movieId","useParams","useState","movieInfo","setMovieInfo","error","setError","location","useLocation","useEffect","onRequestHandler","makeMovieApiReguest","movieDatails","console","log","message","type","to","state","from","src","poster_path","notFoundImageUrl","alt","title","name","release_date","slice","Number","vote_average","toFixed","genres","length","map","join","Suspense","fallback","notFoundDataRequestUrl","height","axios","makeTrendingMoviesApiRequest","signal","process","response","data","results","id","makeCastApiReguest","cast","makeReviewApiReguest","makeMovieSearchApiReguest","value"],"sourceRoot":""}