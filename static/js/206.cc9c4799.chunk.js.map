{"version":3,"file":"static/js/206.cc9c4799.chunk.js","mappings":"sSAEaA,EAAaC,EAAAA,EAAAA,KAAH,2TAYVC,EAAmBD,EAAAA,EAAAA,OAAH,iQAahBE,EAAkBF,EAAAA,EAAAA,MAAH,wP,SCvBfG,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAC3B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAYA,OACI,UAACR,EAAD,CAAYS,SAPU,SAAAC,GAC1BA,EAAEC,iBACwB,KAAtBJ,EAAWK,QACfP,EAASE,EACR,EAGG,WACE,SAACJ,EAAD,CACFU,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZX,SAjBiB,SAAAK,GACrBF,EAAeE,EAAEO,cAAcC,MAAMC,cACpC,KAiBK,SAACjB,EAAD,CAAkBW,KAAK,SAAvB,UAAgC,SAAC,MAAD,CAAUO,KAAK,aAIpD,EC5BYC,EAAapB,EAAAA,EAAAA,GAAH,uZAeVqB,EAAgBrB,EAAAA,EAAAA,IAAH,yIAMbsB,EAAatB,EAAAA,EAAAA,GAAH,gECiCvB,EAlDe,WAAO,IAAD,EACjB,GAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOkB,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GACrCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,GAAc,KAAVJ,EAAJ,CAIA,IAAMK,EAAgB,mCAAG,gHAEUC,EAAAA,EAAAA,IAA0BN,GAAOO,MAAK,SAAAC,GAAG,OAAIA,CAAJ,IAFnD,cAEfC,EAFe,gBAGOA,EAAiBC,KAAI,YAA6C,IAA3CC,EAA0C,EAA1CA,GAA2C,MAAO,CAACC,MAAT,EAAtCA,MAAsDD,GAAAA,EAAIE,aAApB,EAA/BA,aAAiEC,YAAlC,EAAjBA,YAAgE,IAHvH,OAGfC,EAHe,OAIrBnB,EAAUmB,GAJW,kDAMrBC,QAAQC,IAAI,KAAMC,SANG,0DAAH,qDASlBb,GAXH,CAYA,GAAE,CAACL,IAMJ,OACE,+BACA,2BACE,gCACA,SAACzB,EAAD,CAAWC,SARE,SAACa,GACrBU,EAA0B,KAAVV,EAAe,CAACW,MAAOX,GAAS,CAAC,EACjD,IAOWM,EAAOwB,OAAS,IACnB,SAAC3B,EAAD,UACAG,EAAOe,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,YAA3B,OACZ,2BACI,SAAC,KAAD,CAAMM,GAAE,UAAKT,GAAMU,MAAO,CAACC,KAAMpB,GAAjC,UACA,SAACT,EAAD,CAAe8B,IAAKT,EAAW,yCAAqCA,GAAgBU,EAAQ,KAAmCC,IAAG,UAAKb,QAEvI,SAAClB,EAAD,UAAakB,KACb,yCAAsC,GAArBc,OAAOb,IAAkBc,QAAQ,GAAlD,SALKhB,EADG,YAcnB,C,8LCpDLiB,EAAAA,GAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAA4B,mCAAG,oGAEjBD,EAAAA,GAAAA,IAAA,mCAAsCE,qCAFrB,cAElCC,EAFkC,gBAG3BA,EAASC,KAAKC,QAHa,mFAAH,qDAM5BC,EAAmB,mCAAG,WAAOvB,GAAP,uFACRiB,EAAAA,GAAAA,IAAA,gBAAmBjB,EAAnB,oBAAiCmB,mCAAjC,oBADQ,cACzBC,EADyB,gBAElBA,EAASC,KAFS,mFAAH,sDAKnBG,EAAkB,mCAAG,WAAOxB,GAAP,uFACPiB,EAAAA,GAAAA,IAAA,gBAAmBjB,EAAnB,4BAAyCmB,mCAAzC,oBADO,cACxBC,EADwB,gBAEjBA,EAASC,KAAKI,KAFG,mFAAH,sDAKlBC,EAAoB,mCAAG,WAAO1B,GAAP,uFACTiB,EAAAA,GAAAA,IAAA,gBAAmBjB,EAAnB,4BAAyCmB,mCAAzC,2BADS,cAC1BC,EAD0B,yBAEzBA,EAASC,KAAKC,SAFW,2CAAH,sDAKpB3B,EAAyB,mCAAG,WAAOjB,GAAP,uFACduC,EAAAA,GAAAA,IAAA,+BAAkCE,mCAAlC,wCAA+FzC,IADjF,cAC/B0C,EAD+B,yBAE9BA,EAASC,KAAKC,SAFgB,2CAAH,qD","sources":["components/SearchBox/SearchBox.styled.js","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"@emotion/styled\"\n\nexport const SearchForm = styled.form`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-bottom: 20px;\nmax-width: 500px;\nbackground-color: rgba(223, 173, 173, 0.711);\nborder-radius: 5px;\nborder: 1px outset rgba(143, 7, 7, 0.9);\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n`\n\nexport const SearchFormButton = styled.button`\ndisplay: inline-block;\nwidth: 50px;\nheight: 50px;\nopacity: 0.6;\nflex-shrink:0;\nborder-top-right-radius: 5px;\nborder-bottom-right-radius: 5px;\ntransition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\nopacity: 1;\n}\n`\nexport const SearchFormInput = styled.input`\ndisplay: inline-block;\nwidth: 100%;\nheight: 100%;\nfont: inherit;\nfont-size: 20px;\nbackground-color: transparent;\nborder: none;\noutline: none;\npadding: 0 4px;\n&::placeholder {\nfont: inherit;\nfont-size: 18px;\n}\n  `","import { useState } from \"react\";\nimport { FiLoader } from \"react-icons/fi\";\nimport { SearchForm, SearchFormButton, SearchFormInput } from \"./SearchBox.styled\"\n\nexport const SearchBox = ({onChange}) => {\nconst [inputQuery, setInputQuery] = useState('');\n\nconst inputHandler = e => {\nsetInputQuery (e.currentTarget.value.toLowerCase())\n}\n    \nconst formSubmitHandler = e => {\ne.preventDefault();\nif (inputQuery.trim() !== '') {\nonChange(inputQuery)}\n}\n\nreturn (\n    <SearchForm onSubmit={formSubmitHandler}>\n      <SearchFormInput\n    type=\"text\"\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search images and photos\"\n    onChange={inputHandler}\n    />\n      <SearchFormButton type=\"submit\"><FiLoader size='20px'/>\n      </SearchFormButton>\n</SearchForm>\n    )\n}","import styled from \"@emotion/styled\";\n\nexport const MoviesList = styled.ul`\ndisplay:grid;\ngrid-template-columns: repeat(1, 1fr);\n/* grid-template-rows: repeat(3, 1fr); */\ngrid-column-gap: 10px;\ngrid-row-gap: 10px;\n@media screen and (min-width: 450px) {\ngrid-template-columns: repeat(2, 1fr);\ngrid-template-rows: repeat(2, 1fr);\n}\n@media screen and (min-width: 768px) {\ngrid-template-columns: repeat(4, 1fr);\ngrid-template-rows: repeat(3, 1fr);\n}\n`\nexport const PosterPicture = styled.img`\nheight: 400px;\nborder-radius: 5px;\nbox-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19);\n`\n\nexport const MovieTitle = styled.h2`\nfont-size: 17px;\nfont-style: oblique;\n`\n","import { useState, useEffect } from \"react\"\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\"\nimport { makeMovieSearchApiReguest } from \"../../services/api\"\nimport { SearchBox } from \"../../components/SearchBox/SearchBox\";\nimport { MoviesList, MovieTitle, PosterPicture } from \"./Movies.styled\"\n    \nconst Movies = () => {\n    const [movies, setMovies] = useState([])\n    const [searchParams, setSearchParams] = useSearchParams()\n    const query = searchParams.get('query') ?? ''\n    const location = useLocation()\n\n    useEffect(() => {\n        if (query === \"\") {\n            return\n        }\n    \n        const onRequestHandler = async () => {\n            try {\n            const getMoviesByQuery = await makeMovieSearchApiReguest(query).then(res => res)\n            const getMoviesInfo = await getMoviesByQuery.map(({id, title, vote_average, poster_path}) => {return {title, id, vote_average, poster_path}})\n            setMovies(getMoviesInfo)\n        } catch (error) {\n            console.log(error.message)\n            }\n        }\n            onRequestHandler()\n        }, [query])\n\n    const queryHandler = (value) => {\n     setSearchParams(value !== '' ? {query: value} : {})\n    }\n\n        return (\n          <>\n          <main>\n            <section>\n            <SearchBox onChange={queryHandler}/>\n               {movies.length > 0 &&\n            (<MoviesList>\n            {movies.map(({id, title, vote_average, poster_path}) => (\n            <li key={id}>\n                <Link to={`${id}`} state={{from: location}}>\n                <PosterPicture src={poster_path ? `https://image.tmdb.org/t/p/w500${poster_path}` : require('../../img/no-img-avaliable.jpg')} alt={`${title}`} />\n                </Link>\n                <MovieTitle>{title}</MovieTitle>\n                <p>User score: {(Number(vote_average)*10).toFixed(0)}%</p>\n            </li>))}\n            </MoviesList>)\n            }   \n            </section>\n          </main>\n          </>\n        )\n    }\n\nexport default Movies;","import axios from \"axios\"\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/'\n\nexport const makeTrendingMoviesApiRequest = async () => {\n   \n    const response = await axios.get(`trending/all/day?api_key=${process.env.REACT_APP_API_KEY}`)\n    return await response.data.results\n}\n\nexport const makeMovieApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data\n}\n\nexport const makeCastApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/credits?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n    return await response.data.cast\n}\n\nexport const makeReviewApiReguest = async (id) => {\n    const response = await axios.get(`movie/${id}/reviews?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)  \n    return response.data.results\n}\n\nexport const makeMovieSearchApiReguest = async (value) => {\n    const response = await axios.get(`search/movie?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1&query=${value}`)  \n    return response.data.results\n}\n"],"names":["SearchForm","styled","SearchFormButton","SearchFormInput","SearchBox","onChange","useState","inputQuery","setInputQuery","onSubmit","e","preventDefault","trim","type","autoComplete","autoFocus","placeholder","currentTarget","value","toLowerCase","size","MoviesList","PosterPicture","MovieTitle","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","onRequestHandler","makeMovieSearchApiReguest","then","res","getMoviesByQuery","map","id","title","vote_average","poster_path","getMoviesInfo","console","log","message","length","to","state","from","src","require","alt","Number","toFixed","axios","makeTrendingMoviesApiRequest","process","response","data","results","makeMovieApiReguest","makeCastApiReguest","cast","makeReviewApiReguest"],"sourceRoot":""}